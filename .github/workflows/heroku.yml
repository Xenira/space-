name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:

  build:
    env:
      DOCKER_BUILDKIT: '1'
    runs-on: ubuntu-latest
    environment:
      name: Heroku
      url: https://github.com/Xenira/space3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - id: cache-docker
        uses: actions/cache@v1
        with:
          path: /tmp/docker-registry
          key: docker-registry-buildkit-${{ hashFiles('Dockerfile') }}
      - run: docker run -d -p 5000:5000 --restart=always --name registry -v /tmp/docker-registry:/var/lib/registry registry:2 && npx wait-on tcp:5000
      
      - name: build chef 
        run: docker build . --target chef -t space-cubed/chef --cache-from=localhost:5000/space-cubed/chef --build-arg BUILDKIT_INLINE_CACHE=1
      - name: cache chef 
        run: docker tag space-cubed/chef localhost:5000/space-cubed/chef && docker push localhost:5000/space-cubed/chef || true
        if: steps.cache.outputs.cache-hit != 'true'
        
      - name: build trunk 
        run: docker build . --target trunk -t space-cubed/trunk --cache-from=localhost:5000/space-cubed/trunk --build-arg BUILDKIT_INLINE_CACHE=1
      - name: cache trunk 
        run: docker tag space-cubed/trunk localhost:5000/space-cubed/trunk && docker push localhost:5000/space-cubed/trunk || true
        if: steps.cache.outputs.cache-hit != 'true'
        
      - name: build planner-client 
        run: docker build . --target planner-client -t space-cubed/planner-client --cache-from=localhost:5000/space-cubed/planner-client --build-arg BUILDKIT_INLINE_CACHE=1
      - name: cache planner-client 
        run: docker tag space-cubed/planner-client localhost:5000/space-cubed/planner-client && docker push localhost:5000/space-cubed/planner-client || true
        if: steps.cache.outputs.cache-hit != 'true'
        
      - name: build builder-client 
        run: docker build . --target builder-client -t space-cubed/builder-client --cache-from=localhost:5000/space-cubed/builder-client --build-arg BUILDKIT_INLINE_CACHE=1
      - name: cache builder-client 
        run: docker tag space-cubed/builder-client localhost:5000/space-cubed/builder-client && docker push localhost:5000/space-cubed/builder-client || true
        if: steps.cache.outputs.cache-hit != 'true'
        
      - name: build planner-server 
        run: docker build . --target planner-server -t space-cubed/planner-server --cache-from=localhost:5000/space-cubed/planner-server --build-arg BUILDKIT_INLINE_CACHE=1
      - name: cache planner-server 
        run: docker tag space-cubed/planner-server localhost:5000/space-cubed/planner-server && docker push localhost:5000/space-cubed/planner-server || true
        if: steps.cache.outputs.cache-hit != 'true'
        
      - name: build builder-server 
        run: docker build . --target builder-server -t space-cubed/builder-server --cache-from=localhost:5000/space-cubed/builder-server --build-arg BUILDKIT_INLINE_CACHE=1
      - name: cache builder-server 
        run: docker tag space-cubed/builder-client localhost:5000/space-cubed/builder-server && docker push localhost:5000/space-cubed/builder-server || true
        if: steps.cache.outputs.cache-hit != 'true'
        
      - name: build server
        run: docker build . --target server -t space-cubed/web --cache-from=localhost:5000/space-cubed/web --build-arg BUILDKIT_INLINE_CACHE=1
      - name: cache server
        run: docker tag space-cubed/web localhost:5000/space-cubed/web && docker push localhost:5000/space-cubed/web || true
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Heroku login
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "space-cubed" #Must be unique in Heroku
          heroku_email: "l.sprengel@pm.me"
          justlogin: true
      - name: Heroku Registry Login
        run: heroku container:login
        
      - run: docker tag space-cubed/web registry.heroku.com/space-cubed/web
      - name: Push to Heroku
        run: docker push registry.heroku.com/space-cubed/web
      - name: Heroku release
        run: heroku container:release web -a space-cubed
